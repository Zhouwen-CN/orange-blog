const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":43,\"nextId\":43,\"documentIds\":{\"0\":\"0\",\"1\":\"0#这是一个二级标题\",\"2\":\"0#这是一个三级标题\",\"3\":\"0@0\",\"4\":\"0@1\",\"5\":\"1\",\"6\":\"1#版本信息\",\"7\":\"1#默认端口\",\"8\":\"1#直接使用打包好的镜像\",\"9\":\"1#docker-run\",\"10\":\"1#docker-compose\",\"11\":\"1#尝试构建自己的镜像\",\"12\":\"1#安装-docker\",\"13\":\"1#目录结构\",\"14\":\"1#编写-dockerfile\",\"15\":\"1#配置文件\",\"16\":\"1#核心启动文件\",\"17\":\"1#构建镜像\",\"18\":\"1#运行截图\",\"19\":\"1@0\",\"20\":\"1@1\",\"21\":\"2\",\"22\":\"2#准备资源\",\"23\":\"2#创建虚拟机\",\"24\":\"2#_2-linux-系统安装\",\"25\":\"2#_2-1-日期和时间\",\"26\":\"2#_2-2-磁盘分区\",\"27\":\"2#_2-3-kdump\",\"28\":\"2#_2-4-网络和主机名称\",\"29\":\"2#_2-5-root-密码\",\"30\":\"2#_3-linux-初始化\",\"31\":\"2#_3-1-ip-地址修改\",\"32\":\"2#_3-2-使用-ssh-工具连接虚拟机\",\"33\":\"2#_3-2-一些准备工作\",\"34\":\"2#_3-3-安装-jdk\",\"35\":\"2#_4-拍摄快照\",\"36\":\"2#_5-克隆虚拟机\",\"37\":\"2@0\",\"38\":\"2@1\",\"39\":\"3\",\"40\":\"3#vpcard-组件\",\"41\":\"3@0\",\"42\":\"3@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1],\"2\":[1,11],\"3\":[null,null,1],\"4\":[null,null,1],\"5\":[3,30],\"6\":[1,12],\"7\":[1,19],\"8\":[1],\"9\":[2,40],\"10\":[2,91],\"11\":[1],\"12\":[2,49],\"13\":[1,42],\"14\":[2,102],\"15\":[1,1],\"16\":[1,138],\"17\":[1,10],\"18\":[1],\"19\":[null,null,1],\"20\":[null,null,1],\"21\":[2,6],\"22\":[1,5],\"23\":[1,39],\"24\":[3,1],\"25\":[3,1],\"26\":[2,7],\"27\":[3,3],\"28\":[3,2],\"29\":[4,1],\"30\":[3],\"31\":[4,1],\"32\":[5,1],\"33\":[3,113],\"34\":[3,50],\"35\":[2,5],\"36\":[2,8],\"37\":[null,null,1],\"38\":[null,null,1],\"39\":[1,1],\"40\":[2],\"41\":[null,null,1],\"42\":[null,null,1]},\"averageFieldLength\":[1.9147208826284565,25.243043611793613,0.508936025215095],\"storedFields\":{\"0\":{\"h\":\"Springboot初体验\",\"t\":[\"怎么个事,小老弟\"]},\"1\":{\"h\":\"这是一个二级标题\"},\"2\":{\"h\":\"这是一个三级标题\",\"t\":[\"自定义标题\",\"一个有 代码 和 链接 的警告容器。\",\"const a = 1; \"]},\"3\":{\"c\":[\"后端\"]},\"4\":{\"c\":[\"springboot\"]},\"5\":{\"h\":\"Docker 快速启动 Hadoop\",\"t\":[\"🎉 文章的主要目的就是为了快速启动一个 hadoop 环境，用于学习或者测试\",\"当然首先需要 docker 环境，文章后面介绍了如何安装 docker\",\"简单介绍一下镜像的基本信息\",\"镜像大小 2G，服务包含 hadoop 和 hive，hive 配置了 spark 引擎\",\"没有配 mysql，使用 hive 自带的 derby，有时间在搞\",\"可以直接使用打好的镜像，或者尝试构建自己的镜像\",\"启动 hiveserver2 10000 端口需要一些时间，耐心等待一会\"]},\"6\":{\"h\":\"版本信息\",\"t\":[\"服务\",\"版本\",\"备注\",\"hadoop\",\"3.1.3\",\"hive\",\"3.1.3\",\"经过重新编译，用作 hive on spark\",\"spark\",\"3.3.0\"]},\"7\":{\"h\":\"默认端口\",\"t\":[\"可以修改，传递的环境变量会覆盖默认值\",\"服务\",\"端口\",\"hdfs web\",\"9870\",\"hdfs rpc\",\"8020\",\"yarn web\",\"8088\",\"history server\",\"19888\",\"hive metastore\",\"9083\",\"hiveserver2\",\"10000\"]},\"8\":{\"h\":\"直接使用打包好的镜像\"},\"9\":{\"h\":\"docker run\",\"t\":[\"这里使用 host 网络，是为了更好的使用 web ui 的功能\",\"修改 Windows 的 hosts 文件（我这里是 Windows，虚拟机用的 VMware），就可以愉快的玩耍了\",\"docker run -itd \\\\ --name hadoop100 \\\\ --net=host \\\\ -p 9870:9870 \\\\ -p 8020:8020 \\\\ -p 8088:8088 \\\\ -p 19888:19888 \\\\ -p 9083:9083 \\\\ -p 10000:10000 \\\\ registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 \"]},\"10\":{\"h\":\"docker compose\",\"t\":[\"执行步骤\",\"#首先需要创建一个文件夹 mkdir hadoop-compose && cd hadoop-compose #创建hadoop.env文件 vi hadoop.env #创建compose yml文件 vi docker-compose.yml #启动 docker compose up -d \",\"只有在 compose 才需要，docker run 有默认值\",\"hadoop.env\",\"HADOOP_HDFS_NN_ADDRESS=namenode HADOOP_YARN_RM_ADDRESS=resourcemanager HADOOP_MR_HISTORYSERVER_ADDRESS=historyserver HADOOP_HIVE_ADDRESS=hive \",\"这里 replicated 3 表示这个服务会起 3 个副本，当然他还是单机\",\"docker-compose.yml\",\"version: '3.9' services: namenode: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 ports: - 9870:9870 - 8020:8020 env_file: - hadoop.env healthcheck: test: ['CMD-SHELL'，'curl -s namenode:9870 || exit 1'] interval: 30s timeout: 2s retries: 5 command: ['namenode'] datanode: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 depends_on: namenode: condition: service_healthy restart: true env_file: - hadoop.env command: ['datanode'] # deploy: # mode: replicated # replicas: 3 resourcemanager: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 ports: - 8088:8088 env_file: - hadoop.env healthcheck: test: ['CMD-SHELL'，'curl -s resourcemanager:8088 || exit 1'] interval: 30s timeout: 2s retries: 5 command: ['resourcemanager'] nodemanager: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 depends_on: resourcemanager: condition: service_healthy restart: true env_file: - hadoop.env command: ['nodemanager'] # deploy: # mode: replicated # replicas: 3 historyserver: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 ports: - 19888:19888 depends_on: resourcemanager: condition: service_healthy restart: true env_file: - hadoop.env healthcheck: test: ['CMD-SHELL'，'curl -s historyserver:19888 || exit 1'] interval: 30s timeout: 2s retries: 5 command: ['historyserver'] hive: image: registry.cn-hangzhou.aliyuncs.com/zhouwen/apache-hadoop:3.1.3 ports: - 9083:9083 - 10000:10000 depends_on: namenode: condition: service_healthy restart: true resourcemanager: condition: service_healthy restart: true env_file: - hadoop.env healthcheck: test: ['CMD-SHELL'，'curl -s hive:10000 || exit 1'] interval: 30s timeout: 2s retries: 5 command: ['hive'] \"]},\"11\":{\"h\":\"尝试构建自己的镜像\"},\"12\":{\"h\":\"安装 docker\",\"t\":[\"#所需安装包 yum install -y yum-utils #设置镜像仓库(阿里云) yum-config-manager \\\\ --add-repo \\\\ http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #更新yum软件包索引 yum makecache fast #安装docker引擎 yum install docker-ce docker-ce-cli containerd.io #设置阿里云镜像加速(登入阿里云控制台查看,貌似每个人都不一样) sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json <<-'EOF' { \\\"registry-mirrors\\\": [\\\"https://jsodkx19.mirror.aliyuncs.com\\\"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker #查看是否安装成功 docker version \"]},\"13\":{\"h\":\"目录结构\",\"t\":[\"注意\",\"hadoop，jdk，hive，spark 这些需要自己下载\",\"hive 需要自己编译，因为要适配高版本 spark 引擎\",\"hadoop-compose/ ├── docker-compose.yml ├── Dockerfile ├── hadoop.env └── resource ├── bootstrap.sh ├── config │ ├── core-site.xml │ ├── hdfs-site.xml │ ├── hive-site.xml │ ├── mapred-site.xml │ ├── spark-default.conf │ ├── spark-env.sh │ └── yarn-site.xml ├── hadoop-3.1.3.tar.gz ├── jdk-8u212-linux-x64.tar.gz ├── apache-hive-3.1.3-bin.tar.gz └── spark-3.3.0-bin-without-hadoop.tgz \"]},\"14\":{\"h\":\"编写 dockerfile\",\"t\":[\"Dockerfile\",\"FROM centos:centos7 MAINTAINER 597879949@qq.com # 时区 RUN ln -sfv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \\\"Asia/Shanghai\\\" > /etc/timezone ENV LANG=zh_CN.UTF-8 # 工作目录 WORKDIR /opt # 安装jdk ADD ./resource/jdk-8u212-linux-x64.tar.gz /opt ENV JAVA_HOME=/opt/jdk1.8.0_212 # 安装hadoop ADD ./resource/hadoop-3.1.3.tar.gz /opt ENV HADOOP_HOME=/opt/hadoop-3.1.3 ENV HADOOP_COMMON_HOME=${HADOOP_HOME} ENV HADOOP_HDFS_HOME=${HADOOP_HOME} ENV HADOOP_MAPRED_HOME=${HADOOP_HOME} ENV HADOOP_YARN_HOME=${HADOOP_HOME} ENV HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop # 安装hive ADD ./resource/apache-hive-3.1.3-bin.tar.gz /opt ENV HIVE_HOME=/opt/apache-hive-3.1.3-bin # 安装spark ADD ./resource/spark-3.3.0-bin-without-hadoop.tgz /opt ENV SPARK_HOME=/opt/spark-3.3.0-bin-without-hadoop # 默认值 ENV HADOOP_HDFS_NN_WEB_PORT=9870 ENV HADOOP_HDFS_NN_RPC_PORT=8020 ENV HADOOP_HDFS_2NN_PORT=9868 ENV HADOOP_YARN_RM_WEB_PORT=8088 ENV HADOOP_MR_HISTORYSERVER_WEB_PORT=19888 ENV HADOOP_MR_HISTORYSERVER_PRC_PORT=10020 ENV HADOOP_HIVE_METASTORE_PORT=9083 ENV HADOOP_HIVE_HIVESERVER2_PORT=10000 # 拷贝配置文件 RUN mkdir ${HADOOP_HOME}/data && mkdir ${HADOOP_HOME}/logs && mkdir /opt/config COPY ./resource/config/* /opt/config COPY ./resource/bootstrap.sh /opt # 暴露端口 EXPOSE ${HADOOP_HDFS_NN_WEB_PORT} EXPOSE ${HADOOP_HDFS_NN_RPC_PORT} EXPOSE ${HADOOP_YARN_RM_WEB_PORT} EXPOSE ${HADOOP_MR_HISTORYSERVER_WEB_PORT} EXPOSE ${HADOOP_HIVE_METASTORE_PORT} EXPOSE ${HADOOP_HIVE_HIVESERVER2_PORT} ENTRYPOINT [\\\"sh\\\",\\\"./bootstrap.sh\\\"] CMD [\\\"all\\\"] \"]},\"15\":{\"h\":\"配置文件\",\"t\":[\"配置文件列表\"]},\"16\":{\"h\":\"核心启动文件\",\"t\":[\"bootstrap.sh\",\"#!/bin/bash set -euo pipefail function print_title(){ echo -e \\\"\\\\n\\\\n------------------------ $1 ------------------------\\\" } function wait_for() { echo Waiting for $1 to listen on $2... while ! curl $1:$2 > /dev/null 2>&1; do echo waiting...; sleep 1s; done } function start_name_node(){ if [ ! -f /tmp/namenode-formated ];then ${HADOOP_HOME}/bin/hdfs namenode -format >/tmp/namenode-formated fi print_title \\\"starting namenode\\\" ${HADOOP_HOME}/bin/hdfs --loglevel INFO --daemon start namenode print_title \\\"starting secondarynamenode\\\" wait_for ${HADOOP_HDFS_NN_ADDRESS} ${HADOOP_HDFS_NN_WEB_PORT} ${HADOOP_HOME}/bin/hdfs --loglevel INFO --daemon start secondarynamenode } function start_data_node(){ print_title \\\"starting datanode\\\" wait_for ${HADOOP_HDFS_NN_ADDRESS} ${HADOOP_HDFS_NN_WEB_PORT} ${HADOOP_HOME}/bin/hdfs --loglevel INFO --daemon start datanode } function start_resource_manager(){ print_title \\\"starting resourcemanager\\\" ${HADOOP_HOME}/bin/yarn --loglevel INFO --daemon start resourcemanager } function start_node_manager(){ print_title \\\"starting nodemanager\\\" wait_for ${HADOOP_YARN_RM_ADDRESS} ${HADOOP_YARN_RM_WEB_PORT} ${HADOOP_HOME}/bin/yarn --loglevel INFO --daemon start nodemanager } function start_history_server(){ print_title \\\"starting historyserver\\\" wait_for ${HADOOP_YARN_RM_ADDRESS} ${HADOOP_YARN_RM_WEB_PORT} ${HADOOP_HOME}/bin/mapred --loglevel INFO --daemon start historyserver } function start_hive() { print_title \\\"starting hive\\\" wait_for ${HADOOP_HDFS_NN_ADDRESS} ${HADOOP_HDFS_NN_WEB_PORT} if [ ! -f /tmp/hive-formated ];then ${HADOOP_HOME}/bin/hdfs dfsadmin -safemode wait ${HADOOP_HOME}/bin/hdfs dfs -mkdir -p /spark/spark-history ${HADOOP_HOME}/bin/hdfs dfs -mkdir -p /spark/spark-jars ${HADOOP_HOME}/bin/hdfs dfs -put ${SPARK_HOME}/jars/* /spark/spark-jars ${HIVE_HOME}/bin/schematool -dbType derby -initSchema > /tmp/hive-formated fi nohup ${HIVE_HOME}/bin/hive --service metastore > ${HADOOP_HOME}/logs/metastore.log 2>&1 & nohup ${HIVE_HOME}/bin/hive --service hiveserver2 > ${HADOOP_HOME}/logs/hiveserver2.log 2>&1 & } # The default value for a single container is hostname export HADOOP_HDFS_NN_ADDRESS=${HADOOP_HDFS_NN_ADDRESS:-$(hostname)} export HADOOP_YARN_RM_ADDRESS=${HADOOP_YARN_RM_ADDRESS:-$(hostname)} export HADOOP_MR_HISTORYSERVER_ADDRESS=${HADOOP_MR_HISTORYSERVER_ADDRESS:-$(hostname)} export HADOOP_HIVE_ADDRESS=${HADOOP_HIVE_ADDRESS:-$(hostname)} { echo 'cat << EOF' ; cat /opt/config/core-site.xml ; echo -e '\\\\nEOF' ; } | sh > ${HADOOP_CONF_DIR}/core-site.xml { echo 'cat << EOF' ; cat /opt/config/hdfs-site.xml ; echo -e '\\\\nEOF' ; } | sh > ${HADOOP_CONF_DIR}/hdfs-site.xml { echo 'cat << EOF' ; cat /opt/config/mapred-site.xml ; echo -e '\\\\nEOF' ; } | sh > ${HADOOP_CONF_DIR}/mapred-site.xml { echo 'cat << EOF' ; cat /opt/config/yarn-site.xml ; echo -e '\\\\nEOF' ; } | sh > ${HADOOP_CONF_DIR}/yarn-site.xml { echo 'cat << EOF' ; cat /opt/config/hive-site.xml ; echo -e '\\\\nEOF' ; } | sh > ${HIVE_HOME}/conf/hive-site.xml { echo 'cat << EOF' ; cat /opt/config/spark-default.conf ; echo -e '\\\\nEOF' ; } | sh > ${HIVE_HOME}/conf/spark-default.conf cp /opt/config/spark-env.sh ${SPARK_HOME}/conf case $1 in all) start_name_node start_data_node start_resource_manager start_node_manager start_history_server start_hive cd ${HADOOP_HOME}/logs tail -f *.log | awk '/^==> / {fileName=substr($0，5，length-8); next} {printf(\\\"%-15s: %s\\\\n\\\",fileName,$0)}' ;; namenode) start_name_node cd ${HADOOP_HOME}/logs tail -f *namenode*.log *secondarynamenode*.log | awk '/^==> / {fileName=substr($0，5，length-8); next} {printf(\\\"%-15s: %s\\\\n\\\",fileName,$0)}' ;; datanode) start_data_node tail -f ${HADOOP_HOME}/logs/*datanode*.log ;; resourcemanager) start_resource_manager tail -f ${HADOOP_HOME}/logs/*resourcemanager*.log ;; nodemanager) start_node_manager tail -f ${HADOOP_HOME}/logs/*nodemanager*.log ;; historyserver) start_history_server tail -f ${HADOOP_HOME}/logs/*historyserver*.log ;; hive) start_hive cd ${HADOOP_HOME}/logs tail -f metastore.log hiveserver2.log | awk '/^==> / {fileName=substr($0，5，length-8); next} {printf(\\\"%-15s: %s\\\\n\\\",fileName,$0)}' ;; *) $@ ;; esac \"]},\"17\":{\"h\":\"构建镜像\",\"t\":[\"#进入目录 cd hadoop-compose #构建镜像 docker build -t hadoop100 . \"]},\"18\":{\"h\":\"运行截图\"},\"19\":{\"c\":[\"大数据\"]},\"20\":{\"c\":[\"hadoop\"]},\"21\":{\"h\":\"Centos7 安装\",\"t\":[\"✨ 使用 VMware 安装 centos 虚拟机\"]},\"22\":{\"h\":\"准备资源\",\"t\":[\"VMware\",\"centos7 镜像\",\"jdk1.8\"]},\"23\":{\"h\":\"创建虚拟机\",\"t\":[\"提示\",\"没有截图选择默认\",\"点击创建新的虚拟机\",\"选择稍后安装操作系统\",\"选择Linux centos7\",\"选择虚拟机存放位置\",\"cup（建议默认，随后修改）\",\"内存（建议默认，随后修改）\",\"相关信息\",\"host-only 模式（adapter = VMnet1）：虚拟机和主机之间可以相互访问，虚拟机不能访问外网\",\"NET 模式（adapter = VMnet8）：虚拟机和主机之间可以相互访问，虚拟机可以访问外网，外网不能访问虚拟机\",\"桥接模式（adapter = VMnet0）：虚拟机就相当于一台实体机，可以自由访问和被访问以及上网\",\"网络（默认NAT）\",\"磁盘（实际占用为准）\",\"选择镜像文件（这里需要自行下载）\",\"完了开启虚拟机，安装系统，不需要 test，选第一个\"]},\"24\":{\"h\":\"2. linux 系统安装\",\"t\":[\"选择中文\"]},\"25\":{\"h\":\"2.1 日期和时间\",\"t\":[\"调整时间\"]},\"26\":{\"h\":\"2.2 磁盘分区\",\"t\":[\"分配磁盘\",\"添加挂载点\",\"修改文件系统\",\"添加根挂载点（不需要swap，因为后面会关掉的）\"]},\"27\":{\"h\":\"2.3 KDUMP\",\"t\":[\"系统崩溃的时候，备份数据用的，可关闭\"]},\"28\":{\"h\":\"2.4 网络和主机名称\",\"t\":[\"网络和主机名称\",\"点击开始安装\"]},\"29\":{\"h\":\"2.5 ROOT 密码\",\"t\":[\"简单密码点击两次完成即可\"]},\"30\":{\"h\":\"3. linux 初始化\"},\"31\":{\"h\":\"3.1 ip 地址修改\",\"t\":[\"修改成静态ip\"]},\"32\":{\"h\":\"3.2 使用 ssh 工具连接虚拟机\",\"t\":[\"略\"]},\"33\":{\"h\":\"3.2 一些准备工作\",\"t\":[\"#关闭并禁用NetworkManager，图形化用的网络管理，我没有图形化 systemctl stop NetworkManager systemctl disable NetworkManager #关闭并禁用防火墙 systemctl stop firewalld systemctl disable firewalld #关闭并禁用selinux sed -i 's/enforcing/disabled/' /etc/selinux/config #永久 setenforce 0 #临时 #关闭并禁用swap sed -ri 's/.*swap.*/#&/' /etc/fstab #永久 swapoff -a #临时 #设置时区，图形化的时候已经设置了，这里只是把它记录下载 ll /etc/localtime #查看当前时区 timedatectl list-timezones | grep Shanghai #查找中国时区的完整名称 timedatectl set-timezone Asia/Shanghai #其他时区以此类推 #设置hostname，图形化的时候已经设置了，这里只是把它记录下载 hostname #查看当前hostname hostnamectl set-hostname hadoop100 #设置hostname，不用重启 #添加yum 阿里镜像源 curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo #重新构建yum缓存 yum clean all #清除缓存 yum update -y #升级软件包，需要一会 yum makecache #构建缓存 #安装vim yum install -y vim #查看是否安装java和mariadb，命令可以分段执行，不然会直接卸载 rpm -qa | grep -i -E mysql\\\\|mariadb | xargs -n1 rpm -e --nodeps rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps #创建文件夹赋予权限，用来安装软件 mkdir /opt/module mkdir /opt/software chown -R atguigu:atguigu /opt/ #添加用户 useradd atguigu echo 123 | passwd --stdin atguigu #添加sudo权限(sudo就是使用root身份执行命令)，如图 vim /etc/sudoers \",\"添加sudo权限\"]},\"34\":{\"h\":\"3.3 安装 jdk\",\"t\":[\"#上传安装包 #解压 tar -zxvf jdk-8u361-linux-x64.tar.gz -C /opt/module/ #改短名字 cd /opt/module/ mv jdk1.8.0_361 jdk-1.8.0 #设置环境变量 sudo vim /etc/profile.d/my_env.sh #添加以下内容 export JAVA_HOME=/opt/module/jdk-1.8.0 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar #刷新环境变量 source /etc/profile #查看java版本，出现版本号就说明对了 java -version \"]},\"35\":{\"h\":\"4. 拍摄快照\",\"t\":[\"将当前虚拟机作为原型机，需要用的时候克隆修改 ip 即可\",\"拍摄快照\"]},\"36\":{\"h\":\"5. 克隆虚拟机\",\"t\":[\"克隆虚拟机\",\"选择从快照克隆\",\"相关信息\",\"完整克隆会占用更多的硬盘，原型快照损坏不影响\",\"链接克隆，原型快照损坏将导致无法打开\",\"选择链接克隆\"]},\"37\":{\"c\":[\"大数据\"]},\"38\":{\"c\":[\"linux\"]},\"39\":{\"h\":\"Nodejs安装\",\"t\":[\"zzzz\"]},\"40\":{\"h\":\"VPCard 组件\"},\"41\":{\"c\":[\"前端\"]},\"42\":{\"c\":[\"nodejs\"]}},\"dirtCount\":0,\"index\":[[\"前端\",{\"2\":{\"41\":1}}],[\"组件\",{\"0\":{\"40\":1}}],[\"原型快照损坏将导致无法打开\",{\"1\":{\"36\":1}}],[\"原型快照损坏不影响\",{\"1\":{\"36\":1}}],[\"完整克隆会占用更多的硬盘\",{\"1\":{\"36\":1}}],[\"完了开启虚拟机\",{\"1\":{\"23\":1}}],[\"克隆虚拟机\",{\"0\":{\"36\":1},\"1\":{\"36\":1}}],[\"即可\",{\"1\":{\"35\":1}}],[\"将当前虚拟机作为原型机\",{\"1\":{\"35\":1}}],[\"拍摄快照\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"出现版本号就说明对了\",{\"1\":{\"34\":1}}],[\"刷新环境变量\",{\"1\":{\"34\":1}}],[\"改短名字\",{\"1\":{\"34\":1}}],[\"解压\",{\"1\":{\"34\":1}}],[\"上传安装包\",{\"1\":{\"34\":1}}],[\"如图\",{\"1\":{\"33\":1}}],[\"qa\",{\"1\":{\"33\":2}}],[\"qq\",{\"1\":{\"14\":1}}],[\"命令可以分段执行\",{\"1\":{\"33\":1}}],[\"构建缓存\",{\"1\":{\"33\":1}}],[\"构建镜像\",{\"0\":{\"17\":1},\"1\":{\"17\":1}}],[\"需要用的时候克隆修改\",{\"1\":{\"35\":1}}],[\"需要一会\",{\"1\":{\"33\":1}}],[\"需要自己编译\",{\"1\":{\"13\":1}}],[\"升级软件包\",{\"1\":{\"33\":1}}],[\"清除缓存\",{\"1\":{\"33\":1}}],[\"重新构建yum缓存\",{\"1\":{\"33\":1}}],[\"7\",{\"1\":{\"33\":1}}],[\"阿里镜像源\",{\"1\":{\"33\":1}}],[\"阿里云\",{\"1\":{\"12\":1}}],[\"不然会直接卸载\",{\"1\":{\"33\":1}}],[\"不用重启\",{\"1\":{\"33\":1}}],[\"不需要swap\",{\"1\":{\"26\":1}}],[\"不需要\",{\"1\":{\"23\":1}}],[\"其他时区以此类推\",{\"1\":{\"33\":1}}],[\"查找中国时区的完整名称\",{\"1\":{\"33\":1}}],[\"查看java版本\",{\"1\":{\"34\":1}}],[\"查看是否安装java和mariadb\",{\"1\":{\"33\":1}}],[\"查看是否安装成功\",{\"1\":{\"12\":1}}],[\"查看当前hostname\",{\"1\":{\"33\":1}}],[\"查看当前时区\",{\"1\":{\"33\":1}}],[\"grep\",{\"1\":{\"33\":3}}],[\"gz\",{\"1\":{\"13\":3,\"14\":3,\"34\":1}}],[\"图形化的时候已经设置了\",{\"1\":{\"33\":2}}],[\"图形化用的网络管理\",{\"1\":{\"33\":1}}],[\"临时\",{\"1\":{\"33\":2}}],[\"永久\",{\"1\":{\"33\":2}}],[\"关闭并禁用swap\",{\"1\":{\"33\":1}}],[\"关闭并禁用selinux\",{\"1\":{\"33\":1}}],[\"关闭并禁用防火墙\",{\"1\":{\"33\":1}}],[\"关闭并禁用networkmanager\",{\"1\":{\"33\":1}}],[\"我没有图形化\",{\"1\":{\"33\":1}}],[\"我这里是\",{\"1\":{\"9\":1}}],[\"一些准备工作\",{\"0\":{\"33\":1}}],[\"一个有\",{\"1\":{\"2\":1}}],[\"略\",{\"1\":{\"32\":1}}],[\"工具连接虚拟机\",{\"0\":{\"32\":1}}],[\"工作目录\",{\"1\":{\"14\":1}}],[\"地址修改\",{\"0\":{\"31\":1}}],[\"初始化\",{\"0\":{\"30\":1}}],[\"简单密码点击两次完成即可\",{\"1\":{\"29\":1}}],[\"简单介绍一下镜像的基本信息\",{\"1\":{\"5\":1}}],[\"密码\",{\"0\":{\"29\":1}}],[\"点击开始安装\",{\"1\":{\"28\":1}}],[\"点击创建新的虚拟机\",{\"1\":{\"23\":1}}],[\"4\",{\"0\":{\"28\":1,\"35\":1}}],[\"可关闭\",{\"1\":{\"27\":1}}],[\"可以自由访问和被访问以及上网\",{\"1\":{\"23\":1}}],[\"可以修改\",{\"1\":{\"7\":1}}],[\"可以直接使用打好的镜像\",{\"1\":{\"5\":1}}],[\"备份数据用的\",{\"1\":{\"27\":1}}],[\"备注\",{\"1\":{\"6\":1}}],[\"系统崩溃的时候\",{\"1\":{\"27\":1}}],[\"系统安装\",{\"0\":{\"24\":1}}],[\"kdump\",{\"0\":{\"27\":1}}],[\"因为后面会关掉的\",{\"1\":{\"26\":1}}],[\"因为要适配高版本\",{\"1\":{\"13\":1}}],[\"添加以下内容\",{\"1\":{\"34\":1}}],[\"添加sudo权限\",{\"1\":{\"33\":2}}],[\"添加用户\",{\"1\":{\"33\":1}}],[\"添加yum\",{\"1\":{\"33\":1}}],[\"添加根挂载点\",{\"1\":{\"26\":1}}],[\"添加挂载点\",{\"1\":{\"26\":1}}],[\"分配磁盘\",{\"1\":{\"26\":1}}],[\"调整时间\",{\"1\":{\"25\":1}}],[\"日期和时间\",{\"0\":{\"25\":1}}],[\"选第一个\",{\"1\":{\"23\":1}}],[\"选择链接克隆\",{\"1\":{\"36\":1}}],[\"选择从快照克隆\",{\"1\":{\"36\":1}}],[\"选择中文\",{\"1\":{\"24\":1}}],[\"选择镜像文件\",{\"1\":{\"23\":1}}],[\"选择虚拟机存放位置\",{\"1\":{\"23\":1}}],[\"选择linux\",{\"1\":{\"23\":1}}],[\"选择稍后安装操作系统\",{\"1\":{\"23\":1}}],[\"实际占用为准\",{\"1\":{\"23\":1}}],[\"磁盘分区\",{\"0\":{\"26\":1}}],[\"磁盘\",{\"1\":{\"23\":1}}],[\"桥接模式\",{\"1\":{\"23\":1}}],[\"外网不能访问虚拟机\",{\"1\":{\"23\":1}}],[\"模式\",{\"1\":{\"23\":2}}],[\"相关信息\",{\"1\":{\"23\":1,\"36\":1}}],[\"内存\",{\"1\":{\"23\":1}}],[\"随后修改\",{\"1\":{\"23\":2}}],[\"建议默认\",{\"1\":{\"23\":2}}],[\"没有截图选择默认\",{\"1\":{\"23\":1}}],[\"没有配\",{\"1\":{\"5\":1}}],[\"提示\",{\"1\":{\"23\":1}}],[\"镜像\",{\"1\":{\"22\":1}}],[\"镜像大小\",{\"1\":{\"5\":1}}],[\"准备资源\",{\"0\":{\"22\":1}}],[\"虚拟机就相当于一台实体机\",{\"1\":{\"23\":1}}],[\"虚拟机可以访问外网\",{\"1\":{\"23\":1}}],[\"虚拟机不能访问外网\",{\"1\":{\"23\":1}}],[\"虚拟机和主机之间可以相互访问\",{\"1\":{\"23\":2}}],[\"虚拟机\",{\"1\":{\"21\":1}}],[\"虚拟机用的\",{\"1\":{\"9\":1}}],[\"✨\",{\"1\":{\"21\":1}}],[\"大数据\",{\"2\":{\"19\":1,\"37\":1}}],[\"运行截图\",{\"0\":{\"18\":1}}],[\"进入目录\",{\"1\":{\"17\":1}}],[\"^==>\",{\"1\":{\"16\":3}}],[\"|mariadb\",{\"1\":{\"33\":1}}],[\"|\",{\"1\":{\"16\":9,\"33\":6}}],[\"||\",{\"1\":{\"10\":4}}],[\"核心启动文件\",{\"0\":{\"16\":1}}],[\"配置文件列表\",{\"1\":{\"15\":1}}],[\"配置文件\",{\"0\":{\"15\":1}}],[\"配置了\",{\"1\":{\"5\":1}}],[\"暴露端口\",{\"1\":{\"14\":1}}],[\"$java\",{\"1\":{\"34\":2}}],[\"$path\",{\"1\":{\"34\":1}}],[\"$0\",{\"1\":{\"16\":6}}],[\"$2\",{\"1\":{\"16\":2}}],[\"$1\",{\"1\":{\"16\":4}}],[\"$\",{\"1\":{\"14\":8,\"16\":46}}],[\"拷贝配置文件\",{\"1\":{\"14\":1}}],[\"默认nat\",{\"1\":{\"23\":1}}],[\"默认值\",{\"1\":{\"14\":1}}],[\"默认端口\",{\"0\":{\"7\":1}}],[\"o\",{\"1\":{\"33\":1}}],[\"opt\",{\"1\":{\"14\":12,\"16\":7,\"33\":3,\"34\":3}}],[\"only\",{\"1\":{\"23\":1}}],[\"on\",{\"1\":{\"6\":1,\"10\":4,\"16\":1}}],[\">\",{\"1\":{\"14\":1,\"16\":11}}],[\"zzzz\",{\"1\":{\"39\":1}}],[\"zxvf\",{\"1\":{\"34\":1}}],[\"zoneinfo\",{\"1\":{\"14\":1}}],[\"zhouwen\",{\"1\":{\"9\":1,\"10\":6}}],[\"ll\",{\"1\":{\"33\":1}}],[\"length\",{\"1\":{\"16\":3}}],[\"lib\",{\"1\":{\"34\":2}}],[\"list\",{\"1\":{\"33\":1}}],[\"listen\",{\"1\":{\"16\":1}}],[\"linux\",{\"0\":{\"24\":1,\"30\":1},\"1\":{\"12\":1,\"13\":1,\"14\":1,\"34\":1},\"2\":{\"38\":1}}],[\"log\",{\"1\":{\"16\":11}}],[\"loglevel\",{\"1\":{\"16\":6}}],[\"logs\",{\"1\":{\"14\":1,\"16\":9}}],[\"localtime\",{\"1\":{\"14\":1,\"33\":1}}],[\"lang=zh\",{\"1\":{\"14\":1}}],[\"ln\",{\"1\":{\"14\":1}}],[\"时区\",{\"1\":{\"14\":1}}],[\"编写\",{\"0\":{\"14\":1}}],[\"base\",{\"1\":{\"33\":1}}],[\"bash\",{\"1\":{\"16\":1}}],[\"build\",{\"1\":{\"17\":1}}],[\"bin\",{\"1\":{\"13\":2,\"14\":4,\"16\":15,\"34\":1}}],[\"bootstrap\",{\"1\":{\"13\":1,\"14\":2,\"16\":1}}],[\"xargs\",{\"1\":{\"33\":2}}],[\"x64\",{\"1\":{\"13\":1,\"14\":1,\"34\":1}}],[\"xml\",{\"1\":{\"13\":5,\"16\":10}}],[\"8u361\",{\"1\":{\"34\":1}}],[\"8u212\",{\"1\":{\"13\":1,\"14\":1}}],[\"8\",{\"1\":{\"14\":2,\"16\":3,\"22\":1,\"34\":3}}],[\"8088\",{\"1\":{\"7\":1,\"9\":2,\"10\":3}}],[\"8020\",{\"1\":{\"7\":1,\"9\":2,\"10\":2}}],[\"│\",{\"1\":{\"13\":7}}],[\"└──\",{\"1\":{\"13\":3}}],[\"├──\",{\"1\":{\"13\":14}}],[\"jar\",{\"1\":{\"34\":2}}],[\"jars\",{\"1\":{\"16\":3}}],[\"java\",{\"1\":{\"14\":1,\"33\":1,\"34\":2}}],[\"jdk1\",{\"1\":{\"14\":1,\"22\":1,\"34\":1}}],[\"jdk\",{\"0\":{\"34\":1},\"1\":{\"13\":2,\"14\":1,\"34\":3}}],[\"jsodkx19\",{\"1\":{\"12\":1}}],[\"json\",{\"1\":{\"12\":1}}],[\"注意\",{\"1\":{\"13\":1}}],[\"目录结构\",{\"0\":{\"13\":1}}],[\"<<\",{\"1\":{\"12\":1,\"16\":6}}],[\"貌似每个人都不一样\",{\"1\":{\"12\":1}}],[\"登入阿里云控制台查看\",{\"1\":{\"12\":1}}],[\"设置环境变量\",{\"1\":{\"34\":1}}],[\"设置hostname\",{\"1\":{\"33\":2}}],[\"设置时区\",{\"1\":{\"33\":1}}],[\"设置阿里云镜像加速\",{\"1\":{\"12\":1}}],[\"设置镜像仓库\",{\"1\":{\"12\":1}}],[\"fstab\",{\"1\":{\"33\":1}}],[\"firewalld\",{\"1\":{\"33\":2}}],[\"fi\",{\"1\":{\"16\":2}}],[\"filename\",{\"1\":{\"16\":3}}],[\"filename=substr\",{\"1\":{\"16\":3}}],[\"file\",{\"1\":{\"10\":6}}],[\"f\",{\"1\":{\"16\":9}}],[\"format\",{\"1\":{\"16\":1}}],[\"formated\",{\"1\":{\"16\":4}}],[\"for\",{\"1\":{\"16\":8}}],[\"function\",{\"1\":{\"16\":8}}],[\"from\",{\"1\":{\"14\":1}}],[\"fast\",{\"1\":{\"12\":1}}],[\"更新yum软件包索引\",{\"1\":{\"12\":1}}],[\"所需安装包\",{\"1\":{\"12\":1}}],[\"安装vim\",{\"1\":{\"33\":1}}],[\"安装系统\",{\"1\":{\"23\":1}}],[\"安装spark\",{\"1\":{\"14\":1}}],[\"安装hive\",{\"1\":{\"14\":1}}],[\"安装hadoop\",{\"1\":{\"14\":1}}],[\"安装jdk\",{\"1\":{\"14\":1}}],[\"安装docker引擎\",{\"1\":{\"12\":1}}],[\"安装\",{\"0\":{\"12\":1,\"21\":1,\"34\":1},\"1\":{\"21\":1}}],[\"尝试构建自己的镜像\",{\"0\":{\"11\":1}}],[\"597879949\",{\"1\":{\"14\":1}}],[\"5\",{\"0\":{\"29\":1,\"36\":1},\"1\":{\"10\":4,\"16\":3}}],[\"2\",{\"0\":{\"24\":1,\"25\":1,\"26\":2,\"27\":1,\"28\":1,\"29\":1,\"32\":1,\"33\":1}}],[\"2>\",{\"1\":{\"16\":3}}],[\"2nn\",{\"1\":{\"14\":1}}],[\"212\",{\"1\":{\"14\":1}}],[\"2s\",{\"1\":{\"10\":4}}],[\"2g\",{\"1\":{\"5\":1}}],[\"t\",{\"1\":{\"17\":1}}],[\"tail\",{\"1\":{\"16\":7}}],[\"tar\",{\"1\":{\"13\":3,\"14\":3,\"34\":2}}],[\"the\",{\"1\":{\"16\":1}}],[\"then\",{\"1\":{\"16\":2}}],[\"tmp\",{\"1\":{\"16\":4}}],[\"tools\",{\"1\":{\"34\":1}}],[\"to\",{\"1\":{\"16\":1}}],[\"title\",{\"1\":{\"16\":8}}],[\"timedatectl\",{\"1\":{\"33\":2}}],[\"timezones\",{\"1\":{\"33\":1}}],[\"timezone\",{\"1\":{\"14\":1,\"33\":1}}],[\"timeout\",{\"1\":{\"10\":4}}],[\"tgz\",{\"1\":{\"13\":1,\"14\":1}}],[\"tee\",{\"1\":{\"12\":1}}],[\"test\",{\"1\":{\"10\":4,\"23\":1}}],[\"true\",{\"1\":{\"10\":5}}],[\"esac\",{\"1\":{\"16\":1}}],[\"e\",{\"1\":{\"16\":7,\"33\":3}}],[\"euo\",{\"1\":{\"16\":1}}],[\"enforcing\",{\"1\":{\"33\":1}}],[\"entrypoint\",{\"1\":{\"14\":1}}],[\"env\",{\"1\":{\"10\":14,\"13\":2,\"14\":18,\"16\":1,\"34\":1}}],[\"env文件\",{\"1\":{\"10\":1}}],[\"export\",{\"1\":{\"16\":4,\"34\":3}}],[\"expose\",{\"1\":{\"14\":6}}],[\"exit\",{\"1\":{\"10\":4}}],[\"echo\",{\"1\":{\"14\":1,\"16\":15,\"33\":1}}],[\"eof\",{\"1\":{\"12\":2,\"16\":6}}],[\"etc\",{\"1\":{\"12\":2,\"14\":3,\"33\":5,\"34\":2}}],[\"i\",{\"1\":{\"33\":3}}],[\"ip\",{\"0\":{\"31\":1},\"1\":{\"35\":1}}],[\"is\",{\"1\":{\"16\":1}}],[\"if\",{\"1\":{\"16\":2}}],[\"io\",{\"1\":{\"12\":1}}],[\"in\",{\"1\":{\"16\":1}}],[\"initschema\",{\"1\":{\"16\":1}}],[\"info\",{\"1\":{\"16\":6}}],[\"install\",{\"1\":{\"12\":2,\"33\":1}}],[\"interval\",{\"1\":{\"10\":4}}],[\"image\",{\"1\":{\"10\":6}}],[\"itd\",{\"1\":{\"9\":1}}],[\"当然他还是单机\",{\"1\":{\"10\":1}}],[\"当然首先需要\",{\"1\":{\"5\":1}}],[\"个副本\",{\"1\":{\"10\":1}}],[\"表示这个服务会起\",{\"1\":{\"10\":1}}],[\"有默认值\",{\"1\":{\"10\":1}}],[\"有时间在搞\",{\"1\":{\"5\":1}}],[\"才需要\",{\"1\":{\"10\":1}}],[\"只有在\",{\"1\":{\"10\":1}}],[\"useradd\",{\"1\":{\"33\":1}}],[\"usr\",{\"1\":{\"14\":1}}],[\"utf\",{\"1\":{\"14\":1}}],[\"utils\",{\"1\":{\"12\":1}}],[\"update\",{\"1\":{\"33\":1}}],[\"up\",{\"1\":{\"10\":1}}],[\"ui\",{\"1\":{\"9\":1}}],[\"y\",{\"1\":{\"12\":1,\"33\":2}}],[\"yum\",{\"1\":{\"12\":5,\"33\":5}}],[\"yml\",{\"1\":{\"10\":2,\"13\":1}}],[\"yml文件\",{\"1\":{\"10\":1}}],[\"yarn\",{\"1\":{\"7\":1,\"10\":1,\"13\":1,\"14\":3,\"16\":10}}],[\"创建文件夹赋予权限\",{\"1\":{\"33\":1}}],[\"创建虚拟机\",{\"0\":{\"23\":1}}],[\"创建compose\",{\"1\":{\"10\":1}}],[\"创建hadoop\",{\"1\":{\"10\":1}}],[\"vpcard\",{\"0\":{\"40\":1}}],[\"vmnet0\",{\"1\":{\"23\":1}}],[\"vmnet8\",{\"1\":{\"23\":1}}],[\"vmnet1\",{\"1\":{\"23\":1}}],[\"vmware\",{\"1\":{\"9\":1,\"21\":1,\"22\":1}}],[\"value\",{\"1\":{\"16\":1}}],[\"version\",{\"1\":{\"10\":1,\"12\":1,\"34\":1}}],[\"vim\",{\"1\":{\"33\":2,\"34\":1}}],[\"vi\",{\"1\":{\"10\":2}}],[\"首先需要创建一个文件夹\",{\"1\":{\"10\":1}}],[\"执行步骤\",{\"1\":{\"10\":1}}],[\"c\",{\"1\":{\"34\":1}}],[\"chown\",{\"1\":{\"33\":1}}],[\"classpath=\",{\"1\":{\"34\":1}}],[\"clean\",{\"1\":{\"33\":1}}],[\"cli\",{\"1\":{\"12\":1}}],[\"cup\",{\"1\":{\"23\":1}}],[\"curl\",{\"1\":{\"10\":4,\"16\":1,\"33\":1}}],[\"case\",{\"1\":{\"16\":1}}],[\"cat\",{\"1\":{\"16\":12}}],[\"cp\",{\"1\":{\"16\":1}}],[\"centos7\",{\"0\":{\"21\":1},\"1\":{\"14\":1,\"22\":1,\"23\":1}}],[\"centos\",{\"1\":{\"12\":1,\"14\":1,\"21\":1,\"33\":2}}],[\"ce\",{\"1\":{\"12\":4}}],[\"cmd\",{\"1\":{\"10\":4,\"14\":1}}],[\"cd\",{\"1\":{\"10\":1,\"16\":3,\"17\":1,\"34\":1}}],[\"copy\",{\"1\":{\"14\":2}}],[\"core\",{\"1\":{\"13\":1,\"16\":2}}],[\"container\",{\"1\":{\"16\":1}}],[\"containerd\",{\"1\":{\"12\":1}}],[\"conf\",{\"1\":{\"13\":1,\"14\":1,\"16\":9}}],[\"config\",{\"1\":{\"12\":1,\"13\":1,\"14\":3,\"16\":7,\"33\":1}}],[\"condition\",{\"1\":{\"10\":5}}],[\"const\",{\"1\":{\"2\":1}}],[\"common\",{\"1\":{\"14\":1}}],[\"command\",{\"1\":{\"10\":6}}],[\"compose\",{\"0\":{\"10\":1},\"1\":{\"10\":6,\"13\":2,\"17\":1}}],[\"com\",{\"1\":{\"9\":1,\"10\":6,\"12\":2,\"14\":1,\"33\":1}}],[\"cn\",{\"1\":{\"9\":1,\"10\":6,\"14\":1}}],[\"path=$java\",{\"1\":{\"34\":1}}],[\"passwd\",{\"1\":{\"33\":1}}],[\"put\",{\"1\":{\"16\":1}}],[\"profile\",{\"1\":{\"34\":2}}],[\"printf\",{\"1\":{\"16\":3}}],[\"print\",{\"1\":{\"16\":8}}],[\"prc\",{\"1\":{\"14\":1}}],[\"pipefail\",{\"1\":{\"16\":1}}],[\"port\",{\"1\":{\"14\":6,\"16\":5}}],[\"port=9083\",{\"1\":{\"14\":1}}],[\"port=9868\",{\"1\":{\"14\":1}}],[\"port=9870\",{\"1\":{\"14\":1}}],[\"port=10000\",{\"1\":{\"14\":1}}],[\"port=10020\",{\"1\":{\"14\":1}}],[\"port=19888\",{\"1\":{\"14\":1}}],[\"port=8088\",{\"1\":{\"14\":1}}],[\"port=8020\",{\"1\":{\"14\":1}}],[\"ports\",{\"1\":{\"10\":4}}],[\"p\",{\"1\":{\"9\":6,\"12\":1,\"16\":2}}],[\"n1\",{\"1\":{\"33\":2}}],[\"networkmanager\",{\"1\":{\"33\":2}}],[\"net\",{\"1\":{\"23\":1}}],[\"net=host\",{\"1\":{\"9\":1}}],[\"next\",{\"1\":{\"16\":3}}],[\"neof\",{\"1\":{\"16\":6}}],[\"nohup\",{\"1\":{\"16\":2}}],[\"nodejs\",{\"2\":{\"42\":1}}],[\"nodejs安装\",{\"0\":{\"39\":1}}],[\"nodeps\",{\"1\":{\"33\":2}}],[\"node\",{\"1\":{\"16\":9}}],[\"nodemanager\",{\"1\":{\"10\":2,\"16\":4}}],[\"null\",{\"1\":{\"16\":1}}],[\"n\",{\"1\":{\"16\":5}}],[\"nn\",{\"1\":{\"10\":1,\"14\":4,\"16\":8}}],[\"namenode\",{\"1\":{\"10\":5,\"16\":7}}],[\"name\",{\"1\":{\"9\":1,\"16\":3}}],[\"就可以愉快的玩耍了\",{\"1\":{\"9\":1}}],[\"文件\",{\"1\":{\"9\":1}}],[\"文章后面介绍了如何安装\",{\"1\":{\"5\":1}}],[\"文章的主要目的就是为了快速启动一个\",{\"1\":{\"5\":1}}],[\"while\",{\"1\":{\"16\":1}}],[\"waiting\",{\"1\":{\"16\":2}}],[\"wait\",{\"1\":{\"16\":7}}],[\"workdir\",{\"1\":{\"14\":1}}],[\"without\",{\"1\":{\"13\":1,\"14\":2}}],[\"windows\",{\"1\":{\"9\":2}}],[\"web\",{\"1\":{\"7\":2,\"9\":1,\"14\":6,\"16\":5}}],[\"修改成静态ip\",{\"1\":{\"31\":1}}],[\"修改文件系统\",{\"1\":{\"26\":1}}],[\"修改\",{\"1\":{\"9\":1}}],[\"的\",{\"1\":{\"9\":1}}],[\"的功能\",{\"1\":{\"9\":1}}],[\"的警告容器\",{\"1\":{\"2\":1}}],[\"是为了更好的使用\",{\"1\":{\"9\":1}}],[\"网络和主机名称\",{\"0\":{\"28\":1},\"1\":{\"28\":1}}],[\"网络\",{\"1\":{\"9\":1,\"23\":1}}],[\"这些需要自己下载\",{\"1\":{\"13\":1}}],[\"这里只是把它记录下载\",{\"1\":{\"33\":2}}],[\"这里需要自行下载\",{\"1\":{\"23\":1}}],[\"这里\",{\"1\":{\"10\":1}}],[\"这里使用\",{\"1\":{\"9\":1}}],[\"这是一个三级标题\",{\"0\":{\"2\":1}}],[\"这是一个二级标题\",{\"0\":{\"1\":1}}],[\"r\",{\"1\":{\"33\":1}}],[\"rpm\",{\"1\":{\"33\":4}}],[\"rpc\",{\"1\":{\"7\":1,\"14\":2}}],[\"ri\",{\"1\":{\"33\":1}}],[\"root\",{\"0\":{\"29\":1}}],[\"reload\",{\"1\":{\"12\":1}}],[\"repos\",{\"1\":{\"33\":1}}],[\"repo\",{\"1\":{\"12\":2,\"33\":3}}],[\"replicas\",{\"1\":{\"10\":2}}],[\"replicated\",{\"1\":{\"10\":3}}],[\"resource\",{\"1\":{\"13\":1,\"14\":6,\"16\":3}}],[\"resourcemanager\",{\"1\":{\"10\":6,\"16\":4}}],[\"restart\",{\"1\":{\"10\":5,\"12\":1}}],[\"retries\",{\"1\":{\"10\":4}}],[\"registry\",{\"1\":{\"9\":1,\"10\":6,\"12\":1}}],[\"rm\",{\"1\":{\"10\":1,\"14\":2,\"16\":6}}],[\"run\",{\"0\":{\"9\":1},\"1\":{\"9\":1,\"10\":1,\"14\":2}}],[\"直接使用打包好的镜像\",{\"0\":{\"8\":1}}],[\"9\",{\"1\":{\"10\":1}}],[\"9083\",{\"1\":{\"7\":1,\"9\":2,\"10\":2}}],[\"9870\",{\"1\":{\"7\":1,\"9\":2,\"10\":3}}],[\"my\",{\"1\":{\"34\":1}}],[\"mysql\",{\"1\":{\"5\":1,\"33\":1}}],[\"mv\",{\"1\":{\"34\":1}}],[\"module\",{\"1\":{\"33\":1,\"34\":3}}],[\"mode\",{\"1\":{\"10\":2}}],[\"mirror\",{\"1\":{\"12\":1}}],[\"mirrors\",{\"1\":{\"12\":2,\"33\":1}}],[\"maintainer\",{\"1\":{\"14\":1}}],[\"mapred\",{\"1\":{\"13\":1,\"14\":1,\"16\":3}}],[\"makecache\",{\"1\":{\"12\":1,\"33\":1}}],[\"manager\",{\"1\":{\"12\":1,\"16\":6}}],[\"mr\",{\"1\":{\"10\":1,\"14\":3,\"16\":2}}],[\"mkdir\",{\"1\":{\"10\":1,\"12\":1,\"14\":3,\"16\":2,\"33\":2}}],[\"metastore\",{\"1\":{\"7\":1,\"14\":2,\"16\":3}}],[\"source\",{\"1\":{\"34\":1}}],[\"software\",{\"1\":{\"33\":1}}],[\"swapoff\",{\"1\":{\"33\":1}}],[\"swap\",{\"1\":{\"33\":1}}],[\"stdin\",{\"1\":{\"33\":1}}],[\"stop\",{\"1\":{\"33\":2}}],[\"starting\",{\"1\":{\"16\":7}}],[\"start\",{\"1\":{\"16\":24}}],[\"ssh\",{\"0\":{\"32\":1}}],[\"single\",{\"1\":{\"16\":1}}],[\"site\",{\"1\":{\"13\":5,\"16\":10}}],[\"schematool\",{\"1\":{\"16\":1}}],[\"safemode\",{\"1\":{\"16\":1}}],[\"sleep\",{\"1\":{\"16\":1}}],[\"selinux\",{\"1\":{\"33\":1}}],[\"sed\",{\"1\":{\"33\":2}}],[\"secondarynamenode\",{\"1\":{\"16\":3}}],[\"setenforce\",{\"1\":{\"33\":1}}],[\"set\",{\"1\":{\"16\":1,\"33\":2}}],[\"service\",{\"1\":{\"10\":5,\"16\":2}}],[\"services\",{\"1\":{\"10\":1}}],[\"server\",{\"1\":{\"7\":1,\"16\":3}}],[\"sfv\",{\"1\":{\"14\":1}}],[\"shanghai\",{\"1\":{\"14\":2,\"33\":2}}],[\"share\",{\"1\":{\"14\":1}}],[\"sh\",{\"1\":{\"13\":2,\"14\":3,\"16\":8,\"34\":1}}],[\"shell\",{\"1\":{\"10\":4}}],[\"systemctl\",{\"1\":{\"12\":2,\"33\":4}}],[\"sudoers\",{\"1\":{\"33\":1}}],[\"sudo就是使用root身份执行命令\",{\"1\":{\"33\":1}}],[\"sudo\",{\"1\":{\"12\":4,\"34\":1}}],[\"s\",{\"1\":{\"10\":4,\"16\":3,\"33\":2}}],[\"spark\",{\"1\":{\"5\":1,\"6\":2,\"13\":5,\"14\":3,\"16\":11}}],[\"springboot\",{\"2\":{\"4\":1}}],[\"springboot初体验\",{\"0\":{\"0\":1}}],[\"端口\",{\"1\":{\"7\":1}}],[\"端口需要一些时间\",{\"1\":{\"5\":1}}],[\"传递的环境变量会覆盖默认值\",{\"1\":{\"7\":1}}],[\"0\",{\"1\":{\"6\":1,\"13\":1,\"14\":3,\"33\":1,\"34\":3}}],[\"用来安装软件\",{\"1\":{\"33\":1}}],[\"用作\",{\"1\":{\"6\":1}}],[\"用于学习或者测试\",{\"1\":{\"5\":1}}],[\"经过重新编译\",{\"1\":{\"6\":1}}],[\"361\",{\"1\":{\"34\":1}}],[\"30s\",{\"1\":{\"10\":4}}],[\"3\",{\"0\":{\"27\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":2},\"1\":{\"6\":6,\"9\":2,\"10\":17,\"13\":6,\"14\":12}}],[\"版本\",{\"1\":{\"6\":1}}],[\"版本信息\",{\"0\":{\"6\":1}}],[\"服务\",{\"1\":{\"6\":1,\"7\":1}}],[\"服务包含\",{\"1\":{\"5\":1}}],[\"耐心等待一会\",{\"1\":{\"5\":1}}],[\"启动\",{\"1\":{\"5\":1,\"10\":1}}],[\"或者尝试构建自己的镜像\",{\"1\":{\"5\":1}}],[\"dt\",{\"1\":{\"34\":1}}],[\"disabled\",{\"1\":{\"33\":1}}],[\"disable\",{\"1\":{\"33\":2}}],[\"dir\",{\"1\":{\"16\":4}}],[\"dir=$\",{\"1\":{\"14\":1}}],[\"dbtype\",{\"1\":{\"16\":1}}],[\"dfs\",{\"1\":{\"16\":3}}],[\"dfsadmin\",{\"1\":{\"16\":1}}],[\"done\",{\"1\":{\"16\":1}}],[\"do\",{\"1\":{\"16\":1}}],[\"dockerfile\",{\"0\":{\"14\":1},\"1\":{\"13\":1,\"14\":1}}],[\"docker\",{\"0\":{\"5\":1,\"9\":1,\"10\":1,\"12\":1},\"1\":{\"5\":2,\"9\":1,\"10\":4,\"12\":8,\"13\":1,\"17\":1}}],[\"data\",{\"1\":{\"14\":1,\"16\":3}}],[\"datanode\",{\"1\":{\"10\":2,\"16\":4}}],[\"daemon\",{\"1\":{\"12\":2,\"16\":6}}],[\"dev\",{\"1\":{\"16\":1}}],[\"default\",{\"1\":{\"13\":1,\"16\":3}}],[\"deploy\",{\"1\":{\"10\":2}}],[\"depends\",{\"1\":{\"10\":4}}],[\"derby\",{\"1\":{\"5\":1,\"16\":1}}],[\"d\",{\"1\":{\"10\":1,\"33\":1,\"34\":1}}],[\"自带的\",{\"1\":{\"5\":1}}],[\"自定义标题\",{\"1\":{\"2\":1}}],[\"使用\",{\"0\":{\"32\":1},\"1\":{\"5\":1,\"21\":1}}],[\"引擎\",{\"1\":{\"5\":1,\"13\":1}}],[\"home\",{\"1\":{\"14\":7,\"16\":27,\"34\":3}}],[\"home=$\",{\"1\":{\"14\":4}}],[\"home=\",{\"1\":{\"14\":4,\"34\":1}}],[\"hostnamectl\",{\"1\":{\"33\":1}}],[\"hostname\",{\"1\":{\"16\":5,\"33\":2}}],[\"hosts\",{\"1\":{\"9\":1}}],[\"host\",{\"1\":{\"9\":1,\"23\":1}}],[\"https\",{\"1\":{\"12\":1,\"33\":1}}],[\"http\",{\"1\":{\"12\":1}}],[\"healthy\",{\"1\":{\"10\":5}}],[\"healthcheck\",{\"1\":{\"10\":4}}],[\"hangzhou\",{\"1\":{\"9\":1,\"10\":6}}],[\"hadoop100\",{\"1\":{\"9\":1,\"17\":1,\"33\":1}}],[\"hadoop\",{\"0\":{\"5\":1},\"1\":{\"5\":2,\"6\":1,\"9\":1,\"10\":20,\"13\":5,\"14\":32,\"16\":42,\"17\":1},\"2\":{\"20\":1}}],[\"historyserver\",{\"1\":{\"10\":4,\"14\":3,\"16\":6}}],[\"history\",{\"1\":{\"7\":1,\"16\":4}}],[\"hiveserver2\",{\"1\":{\"5\":1,\"7\":1,\"14\":2,\"16\":3}}],[\"hive\",{\"1\":{\"5\":3,\"6\":2,\"7\":1,\"10\":4,\"13\":4,\"14\":7,\"16\":18}}],[\"hdfs\",{\"1\":{\"7\":2,\"10\":1,\"13\":1,\"14\":6,\"16\":18}}],[\"环境\",{\"1\":{\"5\":2}}],[\"🎉\",{\"1\":{\"5\":1}}],[\"快速启动\",{\"0\":{\"5\":1}}],[\"后端\",{\"2\":{\"3\":1}}],[\"123\",{\"1\":{\"33\":1}}],[\"15s\",{\"1\":{\"16\":3}}],[\"1s\",{\"1\":{\"16\":1}}],[\"19888\",{\"1\":{\"7\":1,\"9\":2,\"10\":3}}],[\"10000\",{\"1\":{\"5\":1,\"7\":1,\"9\":2,\"10\":3}}],[\"1\",{\"0\":{\"25\":1,\"31\":1},\"1\":{\"2\":1,\"6\":2,\"9\":1,\"10\":10,\"13\":2,\"14\":4,\"16\":3,\"34\":2}}],[\"=\",{\"1\":{\"2\":1,\"23\":3}}],[\"atguigu\",{\"1\":{\"33\":4}}],[\"adapter\",{\"1\":{\"23\":3}}],[\"address\",{\"1\":{\"16\":9}}],[\"address=$\",{\"1\":{\"16\":4}}],[\"address=hive\",{\"1\":{\"10\":1}}],[\"address=historyserver\",{\"1\":{\"10\":1}}],[\"address=resourcemanager\",{\"1\":{\"10\":1}}],[\"address=namenode\",{\"1\":{\"10\":1}}],[\"add\",{\"1\":{\"12\":1,\"14\":4}}],[\"awk\",{\"1\":{\"16\":3}}],[\"all\",{\"1\":{\"14\":1,\"16\":1,\"33\":1}}],[\"aliyun\",{\"1\":{\"12\":1,\"33\":1}}],[\"aliyuncs\",{\"1\":{\"9\":1,\"10\":6,\"12\":1}}],[\"asia\",{\"1\":{\"14\":2,\"33\":1}}],[\"apache\",{\"1\":{\"9\":1,\"10\":6,\"13\":1,\"14\":2}}],[\"a\",{\"1\":{\"2\":1,\"16\":1,\"33\":1}}],[\"链接克隆\",{\"1\":{\"36\":1}}],[\"链接\",{\"1\":{\"2\":1}}],[\"和\",{\"1\":{\"2\":1,\"5\":1}}],[\"代码\",{\"1\":{\"2\":1}}],[\"小老弟\",{\"1\":{\"0\":1}}],[\"怎么个事\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
